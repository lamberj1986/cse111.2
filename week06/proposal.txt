CSE 111 Proposal for a Student Chosen Program

    (This is a proposal. All proposals are written with our best
    knowledge at the beginning of a project. As we progress from the
    beginning to the end of a project, we gain more knowledge, and we
    change some of our proposed ideas. This is part of completing any
    project and is fine.  However, we still must write a proposal so
    that our teachers or supervisors know what we intend to do. Please
    answer each of the following questions to the best of your
    knowledge.)

1. What is the title of your program? 
    Retirement Calculator

2. What real-world problem will your program address or help to solve?
    Ideally this program will take a few inputs from the user and then cacluate the user's projected
    retirement income based on their current savings.

    Additional functions will allow for the calcuation of how much additionally needs to be saved
    for the user to reach their target retirement spend.

3. What will you learn from developing this program?
    I believe that I will be able to dig in deeper into the math offerings in Python to see if there are
    any pre-built functions that I can use, or if I will need to build out the modules.

    Additionally I hope to dig deeper into retirement investments/financial planning.

    On top of this I haven't ever used GUI in my programing and I would like to learn more about the 
    tkinter module and see how that could be integrated into the program.

4. What Python modules will your program use?
    I plan on using at a minimum the following modules:
        - math
        - pytest
        - tkinter

    (Some examples are: csv, datetime, functools, matplotlib, math,
    pandas, pytest, random, requests, and tkinter.)

5. List the names of functions you will need?


    https://www.synchronybank.com/blog/ultimate-guide-to-retirement-calculations/

    (Remember that the most reusable functions don't get user input and
    don't print results but instead have parameters and return a result.
    Functions that get user input and print results are important and do
    useful work but are not easily reusable.)

    (Remember also that it's hard to test functions that get user input
    and print results. It's easy to test functions that don't get user
    input and don't print results but instead have parameters and return
    a result. Therefore, you should write most of your program functions
    to have parameters and return a result.)

6. List the names of the test functions you will write.

